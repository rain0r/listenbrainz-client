/*
 * ListenBrainz Swagger - OpenAPI 3.0
 * OpenAPI client defintion.
 *
 * The version of the OpenAPI document: v-2024-07-17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.hihn.listenbrainz;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.hihn.listenbrainz.PlaylistExtensionPayloadAdditionalMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.hihn.listenbrainz.JSON;

/**
 * PlaylistExtensionPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class PlaylistExtensionPayload {
  public static final String SERIALIZED_NAME_CREATED_FOR = "created_for";
  @SerializedName(SERIALIZED_NAME_CREATED_FOR)
  private String createdFor;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private String creator;

  public static final String SERIALIZED_NAME_COLLABORATORS = "collaborators";
  @SerializedName(SERIALIZED_NAME_COLLABORATORS)
  private List<String> collaborators = new ArrayList<>();

  public static final String SERIALIZED_NAME_COPIED_FROM = "copied_from";
  @SerializedName(SERIALIZED_NAME_COPIED_FROM)
  private String copiedFrom;

  public static final String SERIALIZED_NAME_COPIED_FROM_DELETED = "copied_from_deleted";
  @SerializedName(SERIALIZED_NAME_COPIED_FROM_DELETED)
  private Boolean copiedFromDeleted;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private Boolean _public;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "last_modified_at";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private String lastModifiedAt;

  public static final String SERIALIZED_NAME_ADDITIONAL_METADATA = "additional_metadata";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_METADATA)
  private PlaylistExtensionPayloadAdditionalMetadata additionalMetadata;

  public PlaylistExtensionPayload() {
  }

  public PlaylistExtensionPayload createdFor(String createdFor) {
    this.createdFor = createdFor;
    return this;
  }

  /**
   * Get createdFor
   * @return createdFor
   */
  @javax.annotation.Nullable
  public String getCreatedFor() {
    return createdFor;
  }

  public void setCreatedFor(String createdFor) {
    this.createdFor = createdFor;
  }


  public PlaylistExtensionPayload creator(String creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   */
  @javax.annotation.Nullable
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }


  public PlaylistExtensionPayload collaborators(List<String> collaborators) {
    this.collaborators = collaborators;
    return this;
  }

  public PlaylistExtensionPayload addCollaboratorsItem(String collaboratorsItem) {
    if (this.collaborators == null) {
      this.collaborators = new ArrayList<>();
    }
    this.collaborators.add(collaboratorsItem);
    return this;
  }

  /**
   * Get collaborators
   * @return collaborators
   */
  @javax.annotation.Nullable
  public List<String> getCollaborators() {
    return collaborators;
  }

  public void setCollaborators(List<String> collaborators) {
    this.collaborators = collaborators;
  }


  public PlaylistExtensionPayload copiedFrom(String copiedFrom) {
    this.copiedFrom = copiedFrom;
    return this;
  }

  /**
   * Get copiedFrom
   * @return copiedFrom
   */
  @javax.annotation.Nullable
  public String getCopiedFrom() {
    return copiedFrom;
  }

  public void setCopiedFrom(String copiedFrom) {
    this.copiedFrom = copiedFrom;
  }


  public PlaylistExtensionPayload copiedFromDeleted(Boolean copiedFromDeleted) {
    this.copiedFromDeleted = copiedFromDeleted;
    return this;
  }

  /**
   * Get copiedFromDeleted
   * @return copiedFromDeleted
   */
  @javax.annotation.Nullable
  public Boolean getCopiedFromDeleted() {
    return copiedFromDeleted;
  }

  public void setCopiedFromDeleted(Boolean copiedFromDeleted) {
    this.copiedFromDeleted = copiedFromDeleted;
  }


  public PlaylistExtensionPayload _public(Boolean _public) {
    this._public = _public;
    return this;
  }

  /**
   * Get _public
   * @return _public
   */
  @javax.annotation.Nullable
  public Boolean getPublic() {
    return _public;
  }

  public void setPublic(Boolean _public) {
    this._public = _public;
  }


  public PlaylistExtensionPayload lastModifiedAt(String lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

  /**
   * Get lastModifiedAt
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public String getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(String lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public PlaylistExtensionPayload additionalMetadata(PlaylistExtensionPayloadAdditionalMetadata additionalMetadata) {
    this.additionalMetadata = additionalMetadata;
    return this;
  }

  /**
   * Get additionalMetadata
   * @return additionalMetadata
   */
  @javax.annotation.Nullable
  public PlaylistExtensionPayloadAdditionalMetadata getAdditionalMetadata() {
    return additionalMetadata;
  }

  public void setAdditionalMetadata(PlaylistExtensionPayloadAdditionalMetadata additionalMetadata) {
    this.additionalMetadata = additionalMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlaylistExtensionPayload playlistExtensionPayload = (PlaylistExtensionPayload) o;
    return Objects.equals(this.createdFor, playlistExtensionPayload.createdFor) &&
        Objects.equals(this.creator, playlistExtensionPayload.creator) &&
        Objects.equals(this.collaborators, playlistExtensionPayload.collaborators) &&
        Objects.equals(this.copiedFrom, playlistExtensionPayload.copiedFrom) &&
        Objects.equals(this.copiedFromDeleted, playlistExtensionPayload.copiedFromDeleted) &&
        Objects.equals(this._public, playlistExtensionPayload._public) &&
        Objects.equals(this.lastModifiedAt, playlistExtensionPayload.lastModifiedAt) &&
        Objects.equals(this.additionalMetadata, playlistExtensionPayload.additionalMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdFor, creator, collaborators, copiedFrom, copiedFromDeleted, _public, lastModifiedAt, additionalMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlaylistExtensionPayload {\n");
    sb.append("    createdFor: ").append(toIndentedString(createdFor)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    collaborators: ").append(toIndentedString(collaborators)).append("\n");
    sb.append("    copiedFrom: ").append(toIndentedString(copiedFrom)).append("\n");
    sb.append("    copiedFromDeleted: ").append(toIndentedString(copiedFromDeleted)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    additionalMetadata: ").append(toIndentedString(additionalMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_for");
    openapiFields.add("creator");
    openapiFields.add("collaborators");
    openapiFields.add("copied_from");
    openapiFields.add("copied_from_deleted");
    openapiFields.add("public");
    openapiFields.add("last_modified_at");
    openapiFields.add("additional_metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlaylistExtensionPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlaylistExtensionPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlaylistExtensionPayload is not found in the empty JSON string", PlaylistExtensionPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlaylistExtensionPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlaylistExtensionPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created_for") != null && !jsonObj.get("created_for").isJsonNull()) && !jsonObj.get("created_for").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_for` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_for").toString()));
      }
      if ((jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) && !jsonObj.get("creator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creator").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("collaborators") != null && !jsonObj.get("collaborators").isJsonNull() && !jsonObj.get("collaborators").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `collaborators` to be an array in the JSON string but got `%s`", jsonObj.get("collaborators").toString()));
      }
      if ((jsonObj.get("copied_from") != null && !jsonObj.get("copied_from").isJsonNull()) && !jsonObj.get("copied_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `copied_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("copied_from").toString()));
      }
      if ((jsonObj.get("last_modified_at") != null && !jsonObj.get("last_modified_at").isJsonNull()) && !jsonObj.get("last_modified_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_modified_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_modified_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlaylistExtensionPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlaylistExtensionPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlaylistExtensionPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlaylistExtensionPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<PlaylistExtensionPayload>() {
           @Override
           public void write(JsonWriter out, PlaylistExtensionPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlaylistExtensionPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlaylistExtensionPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlaylistExtensionPayload
   * @throws IOException if the JSON string is invalid with respect to PlaylistExtensionPayload
   */
  public static PlaylistExtensionPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlaylistExtensionPayload.class);
  }

  /**
   * Convert an instance of PlaylistExtensionPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

