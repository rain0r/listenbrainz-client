/*
 * ListenBrainz Swagger - OpenAPI 3.0
 * OpenAPI client defintion.
 *
 * The version of the OpenAPI document: v-2024-07-17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.hihn.listenbrainz;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets CoverTypes
 */
@JsonAdapter(CoverTypes.Adapter.class)
public enum CoverTypes {
  
  DESIGNER_TOP_5("designer-top-5"),
  
  DESIGNER_TOP_10("designer-top-10"),
  
  LPS_ON_THE_FLOOR("lps-on-the-floor"),
  
  GRID_STATS("grid-stats"),
  
  GRID_STATS_SPECIAL("grid-stats-special");

  private String value;

  CoverTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoverTypes fromValue(String value) {
    for (CoverTypes b : CoverTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CoverTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoverTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoverTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoverTypes.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CoverTypes.fromValue(value);
  }
}

