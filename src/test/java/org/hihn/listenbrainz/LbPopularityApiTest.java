/*
 * ListenBrainz Swagger - OpenAPI 3.0
 * OpenAPI client defintion.
 *
 * The version of the OpenAPI document: v-2024-07-17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.hihn.listenbrainz;

import org.hihn.listenbrainz.ApiException;
import org.hihn.listenbrainz.Artist200ResponseInner;
import org.hihn.listenbrainz.ArtistRequest;
import org.hihn.listenbrainz.Recording200ResponseInner;
import org.hihn.listenbrainz.RecordingRequest;
import org.hihn.listenbrainz.Release200ResponseInner;
import org.hihn.listenbrainz.ReleaseGroup200ResponseInner;
import org.hihn.listenbrainz.ReleaseGroupRequest;
import org.hihn.listenbrainz.ReleaseRequest;
import org.hihn.listenbrainz.TopRecordingsForArtistInner;
import org.hihn.listenbrainz.TopReleaseGroupsForArtistInner;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LbPopularityApi
 */
@Disabled
public class LbPopularityApiTest {

    private final LbPopularityApi api = new LbPopularityApi();

    /**
     * Get the total listen count and total unique listeners count for a given artist.  A JSON document with a list of artists and inc string must be POSTed. Up to MAX_ITEMS_PER_GET items can be requested at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void artistTest() throws ApiException {
        ArtistRequest artistRequest = null;
        List<Artist200ResponseInner> response = api.artist(artistRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the total listen count and total unique listeners count for a given recording.  A JSON document with a list of recording_mbids and inc string must be POSTed. Up to MAX_ITEMS_PER_GET items can be requested at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recordingTest() throws ApiException {
        RecordingRequest recordingRequest = null;
        List<Recording200ResponseInner> response = api.recording(recordingRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the total listen count and total unique listeners count for a given release.  A JSON document with a list of releases and inc string must be POSTed. Up to MAX_ITEMS_PER_GET items can be requested at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void releaseTest() throws ApiException {
        ReleaseRequest releaseRequest = null;
        List<Release200ResponseInner> response = api.release(releaseRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the total listen count and total unique listeners count for a given release group.  A JSON document with a list of release groups and inc string must be POSTed. Up to MAX_ITEMS_PER_GET items can be requested at once.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void releaseGroupTest() throws ApiException {
        ReleaseGroupRequest releaseGroupRequest = null;
        List<ReleaseGroup200ResponseInner> response = api.releaseGroup(releaseGroupRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a list of all recordings ever pinned by a user with given user_name in descending order of the time they were originally pinned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void topRecordingsForArtistTest() throws ApiException {
        UUID artistMbid = null;
        List<TopRecordingsForArtistInner> response = api.topRecordingsForArtist(artistMbid)
                .execute();
        // TODO: test validations
    }

    /**
     * Get the top release groups by listen count for a given artist.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void topReleaseGroupForArtistTest() throws ApiException {
        UUID artistMbid = null;
        List<TopReleaseGroupsForArtistInner> response = api.topReleaseGroupForArtist(artistMbid)
                .execute();
        // TODO: test validations
    }

}
