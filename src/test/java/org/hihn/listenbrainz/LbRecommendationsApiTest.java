/*
 * ListenBrainz Swagger - OpenAPI 3.0
 * OpenAPI client defintion.
 *
 * The version of the OpenAPI document: v-2024-07-17.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.hihn.listenbrainz;

import org.hihn.listenbrainz.ApiException;
import org.hihn.listenbrainz.DeleteFeedbackRequest;
import org.hihn.listenbrainz.FeedbackGivenBy;
import org.hihn.listenbrainz.RecordingRecommendations;
import org.hihn.listenbrainz.RecordingsFeedbackGivenBy;
import org.hihn.listenbrainz.SubmitFeedbackRequest;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LbRecommendationsApi
 */
@Disabled
public class LbRecommendationsApiTest {

    private final LbRecommendationsApi api = new LbRecommendationsApi();

    /**
     * Delete feedback for a user. A user token (found on https://listenbrainz.org/settings/ ) must be provided in the Authorization header! Each request should contain only one recording mbid in the payload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFeedbackTest() throws ApiException {
        DeleteFeedbackRequest deleteFeedbackRequest = null;
        api.deleteFeedback(deleteFeedbackRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * Get feedback given by user &#39;user_name&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void feedbackGivenByTest() throws ApiException {
        String userName = null;
        String rating = null;
        Integer count = null;
        Integer offset = null;
        FeedbackGivenBy response = api.feedbackGivenBy(userName)
                .rating(rating)
                .count(count)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Get recommendations sorted on rating and ratings for user &#39;user_name&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recordingRecommendationsTest() throws ApiException {
        String userName = null;
        Integer count = null;
        Integer offset = null;
        RecordingRecommendations response = api.recordingRecommendations(userName)
                .count(count)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Get feedback given by user &#39;user_name&#39; for the list of recordings supplied.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recordingsFeedbackGivenByTest() throws ApiException {
        String userName = null;
        List<UUID> mbids = null;
        RecordingsFeedbackGivenBy response = api.recordingsFeedbackGivenBy(userName, mbids)
                .execute();
        // TODO: test validations
    }

    /**
     * Submit recommendation feedback. A user token (found on https://listenbrainz.org/settings/ ) must be provided in the Authorization header! Each request should contain only one feedback in the payload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitFeedbackTest() throws ApiException {
        SubmitFeedbackRequest submitFeedbackRequest = null;
        api.submitFeedback(submitFeedbackRequest)
                .execute();
        // TODO: test validations
    }

}
